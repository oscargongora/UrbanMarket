@using ChicStreetwear.Client.Helpers;

<MudToolBar Class="px-0 form-toolbar">
    <MudText Typo="Typo.h5">@(Id is null ? "Create" : "Edit") @Routing!.EntityName</MudText>
    <MudSpacer />
    <MudHidden Breakpoint="Breakpoint.Xs">
        <MudButton ButtonType="ButtonType.Submit" StartIcon="@Icons.Material.Filled.Save"
                   Variant="Variant.Filled" Color="Color.Primary" Style="width: 15.2%;">
            Save
        </MudButton>
    </MudHidden>
    <MudHidden Breakpoint="Breakpoint.SmAndUp">
        <MudIconButton ButtonType="ButtonType.Submit" Icon="@Icons.Material.Filled.Save" Color="Color.Primary" />
    </MudHidden>

    <MudHidden Breakpoint="Breakpoint.Xs">
        @if (Id is not null && ShowDeleteButton)
        {
            <MudButton Class="ml-2" StartIcon="@Icons.Material.Filled.Delete"
                       Variant="Variant.Filled" Color="Color.Error"
                       OnClick="@(()=> OnDeleteClick.InvokeAsync())" Style="width: 15.2%;">
                Delete
            </MudButton>
        }
    </MudHidden>
    <MudHidden Breakpoint="Breakpoint.SmAndUp">
        @if (Id is not null && ShowDeleteButton)
        {
            <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error"
                           OnClick="@(()=> OnDeleteClick.InvokeAsync())">
                Delete
            </MudIconButton>
        }
    </MudHidden>
</MudToolBar>

@code {
    [Parameter]
    public Guid? Id { get; set; }

    [Parameter]
    public RoutingModel? Routing { get; set; }

    [Parameter]
    public bool ShowDeleteButton { get; set; } = true;

    [Parameter]
    public EventCallback OnDeleteClick { get; set; }
}
